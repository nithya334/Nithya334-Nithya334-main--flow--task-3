from sqlalchemy import create_engine, Column, Integer, String, Text, ForeignKey, DateTime
from sqlalchemy.orm import relationship, sessionmaker, declarative_base
from datetime import datetime

# Define the base class for your models
Base = declarative_base()

# Define the User model
class User(Base):
    __tablename__ = 'users'
    
    id = Column(Integer, primary_key=True)
    username = Column(String(50), unique=True, nullable=False)
    email = Column(String(100), unique=True, nullable=False)
    password = Column(String(100), nullable=False)
    posts = relationship('Post', back_populates='author')
    
    def __repr__(self):
        return f"<User(username='{self.username}', email='{self.email}')>"

# Define the Post model
class Post(Base):
    __tablename__ = 'posts'
    
    id = Column(Integer, primary_key=True)
    title = Column(String(100), nullable=False)
    content = Column(Text, nullable=False)
    created_at = Column(DateTime, default=datetime.utcnow)
    user_id = Column(Integer, ForeignKey('users.id'), nullable=False)
    author = relationship('User', back_populates='posts')
    comments = relationship('Comment', back_populates='post')
    
    def __repr__(self):
        return f"<Post(title='{self.title}', author='{self.author.username}')>"

# Define the Comment model
class Comment(Base):
    __tablename__ = 'comments'
    
    id = Column(Integer, primary_key=True)
    content = Column(Text, nullable=False)
    created_at = Column(DateTime, default=datetime.utcnow)
    post_id = Column(Integer, ForeignKey('posts.id'), nullable=False)
    post = relationship('Post', back_populates='comments')
    
    def __repr__(self):
        return f"<Comment(post_id='{self.post_id}', content='{self.content[:30]}')>"

# Create an SQLite database in memory
engine = create_engine('sqlite:///:memory:', echo=True)

# Create all tables
Base.metadata.create_all(engine)
